<?php
declare(strict_types=1);

namespace Plaisio\Form\Test\Control;

use Plaisio\Form\Control\FieldSet;
use Plaisio\Form\Control\NumberControl;
use Plaisio\Form\Control\SimpleControl;
use Plaisio\Form\RawForm;
use Plaisio\Form\Test\Control\Traits\ImmutableTest;

/**
 * Unit tests for class NumberControl.
 */
class NumberControlTest extends SimpleControlTest
{
  //--------------------------------------------------------------------------------------------------------------------
  use ImmutableTest;

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Test HTML generated by element.
   */
  public function testHtml(): void
  {
    $input = new NumberControl('myInput');

    $fieldSet = new FieldSet('myFieldSet');
    $fieldSet->addFormControl($input);

    $form = new RawForm('myForm');
    $form->addFieldSet($fieldSet);

    $html     = $form->getHtml();
    $expected = '<form method="post" action="/"><fieldset><input type="number" name="myForm[myFieldSet][myInput]"/></fieldset></form>';
    self::assertSame($expected, $html);
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * @inheritdoc
   */
  protected function createControl(string $name): SimpleControl
  {
    return new NumberControl($name);
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Returns a valid initial value.
   *
   * @return mixed
   */
  protected function getValidInitialValue()
  {
    return 123;
  }

  //--------------------------------------------------------------------------------------------------------------------
  /**
   * Returns a valid submitted value (different form initial value).
   *
   * @return string
   */
  protected function getValidSubmittedValue(): string
  {
    return '456';
  }

  //--------------------------------------------------------------------------------------------------------------------
}

//----------------------------------------------------------------------------------------------------------------------
